import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/header/Header";
import Footer from "@/components/footer/Footer";
import phoneNumbers from "@/config/config";
import { MyContextProvider } from "@/contexts/MyContextProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
export const metadata = {
  title: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –≤ –ú–∏–Ω—Å–∫–µ | GibkoSale.by ‚Äî –≤—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã –∏ –¥–æ—Å—Ç–∞–≤–∫–∞',
  description: `·êà ‚≠ê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –≤ –ú–∏–Ω—Å–∫–µ ‚úîÔ∏è –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–º–∞ –∏ –¥–∞—á–∏ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º ‚ú´ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ‚ö° –ù–∞–¥—ë–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å ‚û§‚û§‚û§ –¢–µ–ª–µ—Ñ–æ–Ω ‚òéÔ∏è ${phoneNumbers.phone1} ‚úì –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞ gibkosale.by! üöÄ üì¶`,
  keywords: '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω –ú–∏–Ω—Å–∫, –∫—É–ø–∏—Ç—å –æ–Ω–ª–∞–π–Ω, —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–∏–Ω—Å–∫—É, gibkosale.by',
  alternates: {
    canonical: 'https://gibkosale.by/'
  },
  ogTitle: 'GibkoSale.by ‚Äî –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –≤ –ú–∏–Ω—Å–∫–µ',
  ogDescription: '–ü–æ–∫—É–ø–∞–π—Ç–µ –æ–Ω–ª–∞–π–Ω –Ω–∞ GibkoSale.by ‚Äî –≤—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–º–∞ –∏ –¥–∞—á–∏ –≤ –ú–∏–Ω—Å–∫–µ.',
  ogImage: 'https://gibkosale.by/logo/logo.webp',
  ogType: 'website',
  ogUrl: 'https://gibkosale.by/',
  twitterTitle: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –≤ –ú–∏–Ω—Å–∫–µ | GibkoSale.by',
  twitterDescription: 'GibkoSale.by ‚Äî –≤–∞—à –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω –≤ –ú–∏–Ω—Å–∫–µ. –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞ –∏ –¥–∞—á–∏ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π. –ü–æ–∫—É–ø–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω–æ!',
  twitterImage: 'https://gibkosale.by/logo/logo.webp',
  twitterCard: 'summary_large_image'
};



export default function RootLayout({ children }) {
  return (
    <html lang="ru">
      <head></head>
      <MyContextProvider>
        <body>
          <Header />
          {children}
          <Footer />
        </body>
      </MyContextProvider>
    </html>
  );
}
